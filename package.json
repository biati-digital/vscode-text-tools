{
  "name": "vscode-text-tools",
  "displayName": "Text Tools for VS Code",
  "description": "Swiss Army knife for text manipulation and selection",
  "version": "1.2.2",
  "publisher": "biati",
  "author": {
    "name": "Biati Digital",
    "url": "https://www.biati.com.mx"
  },
  "icon": "assets/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/biati-digital/vscode-text-tools.git"
  },
  "bugs": {
    "url": "https://github.com/biati-digital/vscode-text-tools/issues"
  },
  "engines": {
    "vscode": "^1.46.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "title": "Make Lower Case",
        "command": "biati.texttools.tolowercase"
      },
      {
        "title": "Make Upper Case",
        "command": "biati.texttools.touppercase"
      },
      {
        "title": "Make Capital Case",
        "command": "biati.texttools.tocapitalcase"
      },
      {
        "title": "Make Camel Case",
        "command": "biati.texttools.tocamelcase"
      },
      {
        "title": "Make Snake Case",
        "command": "biati.texttools.tosnakecase"
      },
      {
        "title": "Make Screaming Snake Case",
        "command": "biati.texttools.toscreamingsnakecase"
      },
      {
        "title": "Make Pascal Snake Case",
        "command": "biati.texttools.topascalsnakecase"
      },
      {
        "title": "Make Camel Snake Case",
        "command": "biati.texttools.tocamelsnakecase"
      },
      {
        "title": "Make Constant Case",
        "command": "biati.texttools.toconstantcase"
      },
      {
        "title": "Make Dot Case",
        "command": "biati.texttools.todotcase"
      },
      {
        "title": "Make Header Case",
        "command": "biati.texttools.toheadercase"
      },
      {
        "title": "Make Train Case",
        "command": "biati.texttools.totraincase"
      },
      {
        "title": "Make No Case",
        "command": "biati.texttools.tonocase"
      },
      {
        "title": "Make Flat Case",
        "command": "biati.texttools.toflatcase"
      },
      {
        "title": "Make Kebab Case",
        "command": "biati.texttools.toparamcase"
      },
      {
        "title": "Make Screaming Kebab Case",
        "command": "biati.texttools.toscreamingparamcase"
      },
      {
        "title": "Make Pascal Case",
        "command": "biati.texttools.topascalcase"
      },
      {
        "title": "Make Path Case",
        "command": "biati.texttools.topathcase"
      },
      {
        "title": "Make Sentence Case",
        "command": "biati.texttools.tosentencecase"
      },
      {
        "title": "Make Sponge Case",
        "command": "biati.texttools.tospongececase"
      },
      {
        "title": "Make Title Case",
        "command": "biati.texttools.totitlecase"
      },
      {
        "title": "Base64 Encode",
        "command": "biati.texttools.tobase64"
      },
      {
        "title": "Base64 Decode",
        "command": "biati.texttools.decodebase64"
      },
      {
        "title": "URL Encode",
        "command": "biati.texttools.urlencode"
      },
      {
        "title": "URL Decode",
        "command": "biati.texttools.urldecode"
      },
      {
        "title": "Spaces Encode",
        "command": "biati.texttools.encodespaces"
      },
      {
        "title": "Spaces Decode",
        "command": "biati.texttools.decodespaces"
      },
      {
        "title": "HTML Entities Encode",
        "command": "biati.texttools.encodehtml"
      },
      {
        "title": "HTML Entities Decode",
        "command": "biati.texttools.decodehtml"
      },
      {
        "title": "HTML to Decimal Entities",
        "command": "biati.texttools.htmlasciitodecimal"
      },
      {
        "title": "Text to Binary",
        "command": "biati.texttools.texttobinary"
      },
      {
        "title": "Binary to Text",
        "command": "biati.texttools.binarytotext"
      },
      {
        "title": "Text to MD5 Hash",
        "command": "biati.texttools.texttomd5"
      },
      {
        "title": "Text to SHA1 Hash",
        "command": "biati.texttools.texttosha1"
      },
      {
        "title": "Text to SHA256 Hash",
        "command": "biati.texttools.texttosha256"
      },
      {
        "title": "Text to SHA512 Hash",
        "command": "biati.texttools.texttosha512"
      },
      {
        "title": "ASCII to Decimal",
        "command": "biati.texttools.asciitodecimal"
      },
      {
        "title": "ASCII to Hex",
        "command": "biati.texttools.asciitohex"
      },
      {
        "title": "ROT13",
        "command": "biati.texttools.rot13"
      },
      {
        "title": "Strip Slashes",
        "command": "biati.texttools.stripslashes"
      },
      {
        "title": "Smart Quotes",
        "command": "biati.texttools.smartquotes"
      },
      {
        "title": "Straighten Quotes",
        "command": "biati.texttools.straightenquotes"
      },
      {
        "title": "Single Quotes to Double Quotes",
        "command": "biati.texttools.quotessingletodouble"
      },
      {
        "title": "Single Quotes to Backticks",
        "command": "biati.texttools.quotessingletobackticks"
      },
      {
        "title": "Double Quotes to Single Quotes",
        "command": "biati.texttools.quotesdoubletosingle"
      },
      {
        "title": "Double Quotes to Backticks",
        "command": "biati.texttools.quotesdoubletobackticks"
      },
      {
        "title": "Sort Lines Alphanumerically",
        "command": "biati.texttools.sortalphanumerically"
      },
      {
        "title": "Sort Lines Alphanumerically Reverse",
        "command": "biati.texttools.sortalphanumericallyreverse"
      },
      {
        "title": "Sort Lines by Length",
        "command": "biati.texttools.sortbylength"
      },
      {
        "title": "Sort Lines by Length Reverse",
        "command": "biati.texttools.sortbylengthreverse"
      },
      {
        "title": "Reverse Lines",
        "command": "biati.texttools.reverselines"
      },
      {
        "title": "Randomize Lines",
        "command": "biati.texttools.randomlines"
      },
      {
        "title": "Join Lines with Delimiter",
        "command": "biati.texttools.joinlines"
      },
      {
        "title": "Split Text to Lines",
        "command": "biati.texttools.splittolines"
      },
      {
        "title": "Delete Duplicate Lines",
        "command": "biati.texttools.deleteduplicates"
      },
      {
        "title": "Delete Empty Lines",
        "command": "biati.texttools.deleteemptylines"
      },
      {
        "title": "Delete Lines Matching...",
        "command": "biati.texttools.deletelinesmatching"
      },
      {
        "title": "Filter Duplicate Lines",
        "command": "biati.texttools.filterduplucates"
      },
      {
        "title": "Filter Duplicate Lines As New Document",
        "command": "biati.texttools.filterduplucatesnew"
      },
      {
        "title": "Filter Unique Lines",
        "command": "biati.texttools.filteruniques"
      },
      {
        "title": "Filter Unique Lines As New Document",
        "command": "biati.texttools.filteruniquesnew"
      },
      {
        "title": "Filter Lines Matching...",
        "command": "biati.texttools.filterlinesmatching"
      },
      {
        "title": "Filter Lines Matching as New Document",
        "command": "biati.texttools.filterlinesmatchingnew"
      },
      {
        "title": "Select Lines Matching...",
        "paletteTitle": "Select Lines Matching...",
        "command": "biati.texttools.selectlinesmatching",
        "when": "editorHasFocus"
      },
      {
        "title": "Select Ocurrences Matching...",
        "command": "biati.texttools.selectallocurrencesmatching"
      },
      {
        "title": "Selection Expand",
        "command": "biati.texttools.expandselection",
        "shortcut": "ctrl-opt-right"
      },
      {
        "title": "Selection Shrink",
        "command": "biati.texttools.shrinkselection",
        "shortcut": "ctrl-opt-left"
      },
      {
        "title": "Selection Align",
        "command": "biati.texttools.alignselection",
        "shortcut": "cmd-opt-a"
      },
      {
        "title": "Wrap Each Line With...",
        "command": "biati.texttools.wrapeachlinewith"
      },
      {
        "title": "Add Lines Number",
        "command": "biati.texttools.addlinesnumber"
      },
      {
        "title": "Add Text At Beginning of Lines",
        "command": "biati.texttools.appendtolines"
      },
      {
        "title": "Add Text At Ends of Lines",
        "command": "biati.texttools.prependtolines"
      },
      {
        "title": "Insert Non-breaking Space",
        "command": "biati.texttools.nonbreakingspace"
      },
      {
        "title": "Add All Numbers",
        "command": "biati.texttools.addallnumbers"
      },
      {
        "title": "Substract All Numbers",
        "command": "biati.texttools.substractallnumbers"
      },
      {
        "title": "JSON String Encode",
        "command": "biati.texttools.jsonstringencode"
      },
      {
        "title": "JSON String Decode",
        "command": "biati.texttools.jsonstringdecode"
      },
      {
        "title": "JSON String Serialize",
        "command": "biati.texttools.jsonstringserialize"
      },
      {
        "title": "JSON String Unserialize",
        "command": "biati.texttools.jsonstringunserialize"
      },
      {
        "title": "Generate UUID",
        "command": "biati.texttools.generateuuid"
      },
      {
        "title": "Generate Dummy File",
        "command": "biati.texttools.generatedummyfile"
      },
      {
        "title": "Count Words",
        "command": "biati.texttools.countwords"
      },
      {
        "title": "Count Characters",
        "command": "biati.texttools.countcharacters"
      },
      {
        "title": "Count Lines",
        "command": "biati.texttools.countlines"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "biati.texttools.jsonstringserialize",
          "when": "false"
        },
        {
          "command": "biati.texttools.jsonstringunserialize",
          "when": "false"
        }
      ],
      "text-tools": [
        {
          "command": "biati.texttools.tolowercase",
          "when": "editorTextFocus",
          "group": "1_casetools@1"
        },
        {
          "command": "biati.texttools.touppercase",
          "when": "editorTextFocus",
          "group": "1_casetools@2"
        },
        {
          "command": "biati.texttools.tocapitalcase",
          "when": "editorTextFocus",
          "group": "1_casetools@3"
        },
        {
          "command": "biati.texttools.tocamelcase",
          "when": "editorTextFocus",
          "group": "1_casetools@4"
        },
        {
          "command": "biati.texttools.tosnakecase",
          "when": "editorTextFocus",
          "group": "1_casetools@5"
        },
        {
          "command": "biati.texttools.toscreamingsnakecase",
          "when": "editorTextFocus",
          "group": "1_casetools@6"
        },
        {
          "command": "biati.texttools.topascalsnakecase",
          "when": "editorTextFocus",
          "group": "1_casetools@7"
        },
        {
          "command": "biati.texttools.tocamelsnakecase",
          "when": "editorTextFocus",
          "group": "1_casetools@8"
        },
        {
          "command": "biati.texttools.toconstantcase",
          "when": "editorTextFocus",
          "group": "1_casetools@9"
        },
        {
          "command": "biati.texttools.todotcase",
          "when": "editorTextFocus",
          "group": "1_casetools@10"
        },
        {
          "command": "biati.texttools.toheadercase",
          "when": "editorTextFocus",
          "group": "1_casetools@11"
        },
        {
          "command": "biati.texttools.totraincase",
          "when": "editorTextFocus",
          "group": "1_casetools@12"
        },
        {
          "command": "biati.texttools.tonocase",
          "when": "editorTextFocus",
          "group": "1_casetools@13"
        },
        {
          "command": "biati.texttools.toflatcase",
          "when": "editorTextFocus",
          "group": "1_casetools@14"
        },
        {
          "command": "biati.texttools.toparamcase",
          "when": "editorTextFocus",
          "group": "1_casetools@15"
        },
        {
          "command": "biati.texttools.toscreamingparamcase",
          "when": "editorTextFocus",
          "group": "1_casetools@16"
        },
        {
          "command": "biati.texttools.topascalcase",
          "when": "editorTextFocus",
          "group": "1_casetools@17"
        },
        {
          "command": "biati.texttools.topathcase",
          "when": "editorTextFocus",
          "group": "1_casetools@18"
        },
        {
          "command": "biati.texttools.tosentencecase",
          "when": "editorTextFocus",
          "group": "1_casetools@19"
        },
        {
          "command": "biati.texttools.totitlecase",
          "when": "editorTextFocus",
          "group": "1_casetools@20"
        },
        {
          "command": "biati.texttools.tospongececase",
          "when": "editorTextFocus",
          "group": "1_casetools@21"
        },
        {
          "command": "biati.texttools.tobase64",
          "when": "editorTextFocus",
          "group": "2_transformtools@1"
        },
        {
          "command": "biati.texttools.decodebase64",
          "when": "editorTextFocus",
          "group": "2_transformtools@2"
        },
        {
          "command": "biati.texttools.urlencode",
          "when": "editorTextFocus",
          "group": "2_transformtools@3"
        },
        {
          "command": "biati.texttools.urldecode",
          "when": "editorTextFocus",
          "group": "2_transformtools@4"
        },
        {
          "command": "biati.texttools.encodehtml",
          "when": "editorTextFocus",
          "group": "2_transformtools@5"
        },
        {
          "command": "biati.texttools.decodehtml",
          "when": "editorTextFocus",
          "group": "2_transformtools@6"
        },
        {
          "command": "biati.texttools.htmlasciitodecimal",
          "when": "editorTextFocus",
          "group": "2_transformtools@7"
        },
        {
          "command": "biati.texttools.encodespaces",
          "when": "editorTextFocus",
          "group": "2_transformtools@8"
        },
        {
          "command": "biati.texttools.decodespaces",
          "when": "editorTextFocus",
          "group": "2_transformtools@9"
        },
        {
          "command": "biati.texttools.jsonstringencode",
          "when": "editorTextFocus",
          "group": "2_transformtools@10"
        },
        {
          "command": "biati.texttools.jsonstringdecode",
          "when": "editorTextFocus",
          "group": "2_transformtools@11"
        },
        {
          "command": "biati.texttools.texttobinary",
          "when": "editorTextFocus",
          "group": "2_transformtools@14"
        },
        {
          "command": "biati.texttools.binarytotext",
          "when": "editorTextFocus",
          "group": "2_transformtools@15"
        },
        {
          "command": "biati.texttools.asciitodecimal",
          "when": "editorTextFocus",
          "group": "2_transformtools@16"
        },
        {
          "command": "biati.texttools.asciitohex",
          "when": "editorTextFocus",
          "group": "2_transformtools@17"
        },
        {
          "command": "biati.texttools.rot13",
          "when": "editorTextFocus",
          "group": "2_transformtools@18"
        },
        {
          "command": "biati.texttools.texttomd5",
          "when": "editorTextFocus",
          "group": "2_transformtools@18"
        },
        {
          "command": "biati.texttools.texttosha1",
          "when": "editorTextFocus",
          "group": "2_transformtools@18"
        },
        {
          "command": "biati.texttools.texttosha256",
          "when": "editorTextFocus",
          "group": "2_transformtools@18"
        },
        {
          "command": "biati.texttools.texttosha512",
          "when": "editorTextFocus",
          "group": "2_transformtools@18"
        },
        {
          "command": "biati.texttools.stripslashes",
          "when": "editorTextFocus",
          "group": "2_transformtools@19"
        },
        {
          "command": "biati.texttools.smartquotes",
          "when": "editorTextFocus",
          "group": "2_transformtools@20"
        },
        {
          "command": "biati.texttools.straightenquotes",
          "when": "editorTextFocus",
          "group": "2_transformtools@21"
        },
        {
          "command": "biati.texttools.quotessingletodouble",
          "when": "editorTextFocus",
          "group": "2_transformtools@22"
        },
        {
          "command": "biati.texttools.quotessingletobackticks",
          "when": "editorTextFocus",
          "group": "2_transformtools@23"
        },
        {
          "command": "biati.texttools.quotesdoubletosingle",
          "when": "editorTextFocus",
          "group": "2_transformtools@24"
        },
        {
          "command": "biati.texttools.quotesdoubletobackticks",
          "when": "editorTextFocus",
          "group": "2_transformtools@25"
        },
        {
          "command": "biati.texttools.sortalphanumerically",
          "when": "editorTextFocus",
          "group": "3_sorttools"
        },
        {
          "command": "biati.texttools.sortalphanumericallyreverse",
          "when": "editorTextFocus",
          "group": "3_sorttools"
        },
        {
          "command": "biati.texttools.sortbylength",
          "when": "editorTextFocus",
          "group": "3_sorttools"
        },
        {
          "command": "biati.texttools.sortbylengthreverse",
          "when": "editorTextFocus",
          "group": "3_sorttools"
        },
        {
          "command": "biati.texttools.reverselines",
          "when": "editorTextFocus",
          "group": "4_linestools"
        },
        {
          "command": "biati.texttools.randomlines",
          "when": "editorTextFocus",
          "group": "4_linestools"
        },
        {
          "command": "biati.texttools.joinlines",
          "when": "editorTextFocus",
          "group": "4_linestools"
        },
        {
          "command": "biati.texttools.splittolines",
          "when": "editorTextFocus",
          "group": "4_linestools"
        },
        {
          "command": "biati.texttools.deleteduplicates",
          "when": "editorTextFocus",
          "group": "5_deletetools"
        },
        {
          "command": "biati.texttools.deleteemptylines",
          "when": "editorTextFocus",
          "group": "5_deletetools"
        },
        {
          "command": "biati.texttools.deletelinesmatching",
          "when": "editorTextFocus",
          "group": "5_deletetools"
        },
        {
          "command": "biati.texttools.filterduplucates",
          "when": "editorTextFocus",
          "group": "6_filtertools"
        },
        {
          "command": "biati.texttools.filterduplucatesnew",
          "when": "editorTextFocus",
          "group": "6_filtertools"
        },
        {
          "command": "biati.texttools.filteruniques",
          "when": "editorTextFocus",
          "group": "6_filtertools"
        },
        {
          "command": "biati.texttools.filteruniquesnew",
          "when": "editorTextFocus",
          "group": "6_filtertools"
        },
        {
          "command": "biati.texttools.filterlinesmatching",
          "when": "editorTextFocus",
          "group": "6_filtertools"
        },
        {
          "command": "biati.texttools.filterlinesmatchingnew",
          "when": "editorTextFocus",
          "group": "6_filtertools"
        },
        {
          "command": "biati.texttools.selectlinesmatching",
          "when": "editorTextFocus",
          "group": "7_selecttools"
        },
        {
          "command": "biati.texttools.selectallocurrencesmatching",
          "when": "editorTextFocus",
          "group": "7_selecttools"
        },
        {
          "command": "biati.texttools.expandselection",
          "when": "editorTextFocus",
          "group": "7_selecttools"
        },
        {
          "command": "biati.texttools.shrinkselection",
          "when": "editorTextFocus",
          "group": "7_selecttools"
        },
        {
          "command": "biati.texttools.alignselection",
          "when": "editorTextFocus",
          "group": "7_selecttools"
        },
        {
          "command": "biati.texttools.wrapeachlinewith",
          "when": "editorTextFocus",
          "group": "8_linesmodstools"
        },
        {
          "command": "biati.texttools.addlinesnumber",
          "when": "editorTextFocus",
          "group": "8_linesmodstools"
        },
        {
          "command": "biati.texttools.appendtolines",
          "when": "editorTextFocus",
          "group": "8_linesmodstools"
        },
        {
          "command": "biati.texttools.prependtolines",
          "when": "editorTextFocus",
          "group": "8_linesmodstools"
        },
        {
          "command": "biati.texttools.countwords",
          "when": "editorTextFocus",
          "group": "9_countertools@1"
        },
        {
          "command": "biati.texttools.countcharacters",
          "when": "editorTextFocus",
          "group": "9_countertools@2"
        },
        {
          "command": "biati.texttools.countlines",
          "when": "editorTextFocus",
          "group": "9_countertools@3"
        },
        {
          "command": "biati.texttools.nonbreakingspace",
          "when": "editorTextFocus",
          "group": "9_inserttools"
        },
        {
          "command": "biati.texttools.addallnumbers",
          "when": "editorTextFocus",
          "group": "9_inserttools"
        },
        {
          "command": "biati.texttools.substractallnumbers",
          "when": "editorTextFocus",
          "group": "9_inserttools"
        },
        {
          "command": "biati.texttools.generateuuid",
          "when": "editorTextFocus",
          "group": "9_inserttools"
        }
      ],
      "editor/context": [
        {
          "submenu": "text-tools",
          "group": "1_modification@11"
        }
      ]
    },
    "submenus": [
      {
        "label": "Text Tools",
        "id": "text-tools"
      }
    ]
  },
  "keywords": [
    "text",
    "tools",
    "grep",
    "utilities",
    "binary",
    "filter",
    "filtering",
    "filter text",
    "filter lines",
    "case",
    "encode",
    "decode",
    "TextFX",
    "Text Pastry",
    "pastry",
    "converter",
    "converting",
    "base64",
    "urlencode",
    "html entities",
    "xml entities",
    "zalgo",
    "clipboard",
    "faker",
    "fake data",
    "test data",
    "sort",
    "sorting",
    "json",
    "trim",
    "generator",
    "dummy file",
    "uuid"
  ],
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/locutus": "^0.0.6",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.46.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.3",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.0"
  },
  "dependencies": {
    "change-case": "^4.1.2",
    "html-entities": "^2.3.3",
    "locutus": "^2.0.16",
    "uuid-random": "^1.3.2"
  }
}